name: Build and Deploy to GKE Autopilot

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  CLUSTER_NAME: "multi-tier-app-cluster"
  CLUSTER_REGION: "europe-north1"
  BACKEND_IMAGE: "philipoyelegbin/fbck-backend"
  CLIENT_IMAGE: "philipoyelegbin/fbck-client"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and push backend image
        run: |
          cd backend
          docker build --build-arg DATABASE_URL=${{ env.DATABASE_URL }} -t ${{ env.BACKEND_IMAGE }}:latest .
          docker push ${{ env.BACKEND_IMAGE }}:latest

      - name: Build and push client image
        run: |
          cd client
          docker build -t ${{ env.CLIENT_IMAGE }}:latest .
          docker push ${{ env.CLIENT_IMAGE }}:latest

  deploy-to-gke:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Authenticate to GKE
        run: |
          echo "${{ env.GCP_SA_KEY }}" > /tmp/gcp_sa_key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp_sa_key.json
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.CLUSTER_REGION }} --project ${{ env.GCP_PROJECT_ID }}

      - name: Deploy backend application
        run: |
          kubectl apply -f kubernetes/backend-deployment.yaml
          kubectl apply -f kubernetes/backend-service.yaml

      - name: Deploy client application
        run: |
          kubectl apply -f kubernetes/client-deployment.yaml
          kubectl apply -f kubernetes/client-service.yaml
